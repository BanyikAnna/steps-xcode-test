title: Xcode Test
summary: |-
  Write the tests and run them on every build just to make sure those tiny
  code goblins didn't put something in the code that shouldn't be there while
  you were at the daily Scrum meeting.
description: |-
  Runs Xcode's `test` action.
website: https://github.com/bitrise-io/steps-xcode-test
source_code_url: https://github.com/bitrise-io/steps-xcode-test
support_url: https://github.com/bitrise-io/steps-xcode-test/issues
host_os_tags:
  - "osx-10.10"
project_type_tags:
  - ios
type_tags:
  - build
  - xcode
is_requires_admin_user: false
is_always_run: false
is_skippable: false
deps:
  check_only:
  - name: xcode
  brew:
  - name: go
dependencies:
  - manager: _
    name: xcode
  - manager: brew
    name: go
inputs:
  - workdir: $BITRISE_SOURCE_DIR
    opts:
      title: "Working directory"
      description: |
        Working directory of the step.
        You can leave it empty to don't change it.
      is_required: false
      is_expand: true
  - project_path: $BITRISE_PROJECT_PATH
    opts:
      title: "Project (or Workspace) path"
      description: |
        A `.xcodeproj` or `.xcworkspace` path, relative to
        the Working directory (if specified).
      is_required: true
      is_expand: true
  - scheme: $BITRISE_SCHEME
    opts:
      title: "Scheme name"
      description: |
        The Scheme to use.

        **IMPORTANT**: The Scheme have to be marked as __shared__ in Xcode!
      is_required: true
      is_expand: true
  - simulator_platform: iOS Simulator
    opts:
      title: Platform
      description: |-
        Set it as it is shown in Xcode's device selection dropdown UI.

        A couple of examples (the
        actual available options depend on which versions
        are installed):

        * iOS Simulator
        * tvOS Simulator
      value_options:
      - iOS Simulator
      - tvOS Simulator
  - simulator_device: iPhone 6
    opts:
      title: "Device"
      description: |-
        Set it as it is shown in Xcode's device selection dropdown UI.

        A couple of examples (the
        actual available options depend on which versions
        are installed):

        * iPhone 6
        * iPhone 6 Plus
        * iPad
        * iPad Air
        * Apple TV 1080p (don't forget to set the platform to `tvOS Simulator` to use this option!)
      is_required: false
      is_expand: true
  - simulator_os_version: latest
    opts:
      title: "OS version"
      description: |
        Set it as it is shown in
        Xcode's device selection dropdown UI.

        A couple of format examples (the
        actual available options depend on which versions
        are installed):

        * 8.4
        * latest
      is_required: false
      is_expand: true
  - is_clean_build: "yes"
    opts:
      title: "Do a clean Xcode build before testing?"
      value_options:
        - "yes"
        - "no"
      is_required: true
      is_expand: true
  - generate_code_coverage_files: "no"
    opts:
      title: "Generate code coverage files?"
      value_options:
        - "yes"
        - "no"
      is_required: true
      is_expand: true
  - test_results_file_path: "${BITRISE_DEPLOY_DIR}/xcode-test-results-${BITRISE_SCHEME}.html"
    opts:
      title: "Test results file path"
      description: |-
        **This option is only available if you set `xcpretty` as the `output_tool`.**

        Test results in HTML format, generated by `xcpretty`,
        will be saved to this file.
      is_required: true
      is_expand: true
  - output_tool: xcpretty
    opts:
      title: Output tool
      description: |-
        If output_tool is set to xcpretty, the xcodebuild output will be prettified by xcpretty.
        If output_tool is set to xcodebuild, the raw xcodebuild output will be printed.
      value_options:
      - xcpretty
      - xcodebuild
      is_required: true
      is_expand: false
      is_dont_change_value: false
outputs:
- BITRISE_XCODE_TEST_RESULT:
  opts:
    title: Result of the tests. 'succeeded' or 'failed'.
    value_options:
    - succeeded
    - failed
